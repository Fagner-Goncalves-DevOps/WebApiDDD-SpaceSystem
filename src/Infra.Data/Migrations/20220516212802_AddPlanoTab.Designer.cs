// <auto-generated />
using System;
using Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infra.Data.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    [Migration("20220516212802_AddPlanoTab")]
    partial class AddPlanoTab
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Entities.Contrato", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataCadastroContrato")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoContrato")
                        .IsRequired()
                        .HasColumnType("varchar(1000)");

                    b.Property<Guid>("PessoaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TipoContrato")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId");

                    b.ToTable("Contratos");
                });

            modelBuilder.Entity("Domain.Entities.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Complemento")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("PessoaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId")
                        .IsUnique();

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("Domain.Entities.Parcela", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<Guid>("ContratoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCadastroParcela")
                        .HasColumnType("datetime2");

                    b.Property<string>("Plano")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<decimal>("ValorParcelas")
                        .HasColumnType("decimal");

                    b.HasKey("Id");

                    b.HasIndex("ContratoId");

                    b.ToTable("Parcelas");
                });

            modelBuilder.Entity("Domain.Entities.Pessoa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int>("TipoPessoa")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Pessoas");
                });

            modelBuilder.Entity("Domain.Entities.PlanoDescricao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<Guid>("ContratoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCadastroParcela")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DescontoPlano")
                        .HasColumnType("decimal");

                    b.Property<string>("DescricaoPlano")
                        .IsRequired()
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("NomePlano")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("ParcelaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ContratoId");

                    b.HasIndex("ParcelaId")
                        .IsUnique();

                    b.ToTable("PlanoDescricoes");
                });

            modelBuilder.Entity("Domain.Entities.Contrato", b =>
                {
                    b.HasOne("Domain.Entities.Pessoa", "Pessoa")
                        .WithMany("Contratos")
                        .HasForeignKey("PessoaId")
                        .IsRequired();

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("Domain.Entities.Endereco", b =>
                {
                    b.HasOne("Domain.Entities.Pessoa", "Pessoa")
                        .WithOne("Endereco")
                        .HasForeignKey("Domain.Entities.Endereco", "PessoaId")
                        .IsRequired();

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("Domain.Entities.Parcela", b =>
                {
                    b.HasOne("Domain.Entities.Contrato", "Contratos")
                        .WithMany("Parcelas")
                        .HasForeignKey("ContratoId")
                        .IsRequired();

                    b.Navigation("Contratos");
                });

            modelBuilder.Entity("Domain.Entities.PlanoDescricao", b =>
                {
                    b.HasOne("Domain.Entities.Contrato", "Contratos")
                        .WithMany("PlanoDescricoes")
                        .HasForeignKey("ContratoId")
                        .IsRequired();

                    b.HasOne("Domain.Entities.Parcela", "Parcelas")
                        .WithOne("PlanoDescricoes")
                        .HasForeignKey("Domain.Entities.PlanoDescricao", "ParcelaId")
                        .IsRequired();

                    b.Navigation("Contratos");

                    b.Navigation("Parcelas");
                });

            modelBuilder.Entity("Domain.Entities.Contrato", b =>
                {
                    b.Navigation("Parcelas");

                    b.Navigation("PlanoDescricoes");
                });

            modelBuilder.Entity("Domain.Entities.Parcela", b =>
                {
                    b.Navigation("PlanoDescricoes");
                });

            modelBuilder.Entity("Domain.Entities.Pessoa", b =>
                {
                    b.Navigation("Contratos");

                    b.Navigation("Endereco");
                });
#pragma warning restore 612, 618
        }
    }
}
